C:\packer\                  # Git repository root: Central project entry; clone from GitHub. Scalable for multi-OS/platform via wrapper params and Git branches/tags.
├── .git\                   # Version control: Tracks configs, scripts, variables, templates; use for commit history, branches (e.g., azure-dev), tags (e.g., v1.0-win11).
├── bin\                    # Tools (gitignored): Executables/utilities; add platform-specific tools (e.g., mkisofs for ISO creation). Validate with Test-Path in wrapper.
│   ├── packer.exe          # Packer executable: Core for image builds.
│   ├── sdelete.exe         # Windows secure delete: Sysinternals tool.
│   └── shred               # Linux secure delete: GNU tool (future-proof).
├── builds\                  # Build outputs (gitignored): Runtime artefacts; subdirs per OS/platform to avoid clutter in scaled CI/CD.
│   ├── artefacts\          # Final images/templates: Organised by OS to avoid clutter (e.g., win11-vsphere.ovf).
│   │   ├── windows\        # Windows artefacts: Outputs for Win11/Server.
│   │   │   ├── win11\      # Win11-specific artefacts.
│   │   │   └── winsvr2022\ # WinServer artefacts.
│   │   ├── linux\          # Linux artefacts: Outputs for Ubuntu/RHEL.
│   │   │   ├── ubuntu\     # Ubuntu artefacts.
│   │   │   └── rhel\       # RHEL artefacts.
│   │   └── macos\          # MacOS artefacts: Future expansion.
│   ├── logs\               # Build logs: Timestamped files; scalable with OS/platform prefixes.
│   ├── manifests\          # JSON manifests: Build records with metadata/hashes/commit info; one per build for auditing.
│   └── reports\            # Audit reports: HTML/JSON from audit.ps1; organised by OS.
├── configs\                 # OS-specific configurations: Versioned via Git; modular for adding OSes (duplicate in branches).
│   ├── windows\            # Windows family: All Windows configs; common/ for shared.
│   │   ├── win11\          # Client edition: Win11 configs; platform subfolders.
│   │   │   ├── vsphere\    # vSphere platform: Win11 vSphere-specific (e.g., autounattend.xml).
│   │   │   └── azure\      # Azure platform: Win11 Azure-specific.
│   │   ├── winsvr2022\     # Server edition: WinServer 2022 configs.
│   │   │   ├── vsphere\    # vSphere for Server.
│   │   │   └── azure\      # Azure for Server.
│   │   └── common\         # Shared Windows configs: Reusable like autounattend_fragments/.
│   │       └── autounattend_fragments\  # XML fragments; shared across Windows.
│   ├── linux\              # Linux family: All Linux configs; common/ for shared.
│   │   ├── ubuntu\         # Ubuntu distribution: Ubuntu configs; platform subfolders.
│   │   │   ├── vsphere\    # vSphere for Ubuntu (e.g., kickstart.cfg).
│   │   │   └── azure\      # Azure for Ubuntu.
│   │   ├── rhel\           # RHEL distribution: RHEL configs.
│   │   │   ├── vsphere\    # vSphere for RHEL.
│   │   │   └── azure\      # Azure for RHEL.
│   │   └── common\         # Shared Linux configs: Reusable like cloud-init/.
│   │       └── cloud-init\  # Cloud-init fragments; shared across Linux.
│   └── common\             # Cross-OS configurations: Rare shared setups (e.g., network configs).
├── templates\               # Packer templates: HCL files; scalable with OS conditionals.
│   ├── windows\            # Windows templates: Base for Windows OSes.
│   │   ├── vsphere-base.pkr.hcl  # vSphere base for Windows.
│   │   └── azure-base.pkr.hcl    # Azure base for Windows.
│   ├── linux\              # Linux templates: Base for Linux distributions.
│   │   ├── vsphere-base.pkr.hcl  # vSphere base for Linux.
│   │   └── azure-base.pkr.hcl    # Azure base for Linux.
│   └── components\         # Reusable modules: Shared HCL for all OSes (e.g., connection setups).
│       ├── winrm-setup.pkr.hcl  # WinRM for Windows.
│       └── ssh-setup.pkr.hcl    # SSH for Linux/macOS.
├── scripts\                 # OS-specific scripts: Versioned via Git; modular for adding distributions.
│   ├── windows\            # PowerShell scripts for Windows; common/ for shared.
│   │   ├── client\         # Client OS (Win10/11; e.g., install-horizon.ps1).
│   │   ├── server\         # Server OS (WinServer; e.g., install-rds.ps1).
│   │   └── common\         # Shared Windows (e.g., optimizations.ps1).
│   ├── linux\              # Shell scripts for Linux; common/ for shared.
│   │   ├── ubuntu\         # Ubuntu-specific (e.g., install-docker.sh).
│   │   ├── rhel\           # RHEL-specific (e.g., security-harden.sh).
│   │   └── common\         # Shared Linux (e.g., kernel-tune.sh).
│   └── lib\                # Shared modules: .psm1 for PowerShell, .sh libs for shell; multi-OS.
│       ├── package-manager.psm1  # Unified package handling (winget/apt).
│       └── os-detection.psm1     # OS detection.
├── variables\               # Variable definitions: Versioned via Git; scalable with OS/platform subfiles.
│   ├── global.pkrvars.hcl  # Cross-all (e.g., package_source="\\server\packages\").
│   ├── platforms\          # Platform vars (add gcp.pkrvars.hcl for new platforms).
│   │   ├── vsphere.pkrvars.hcl  # vSphere vars.
│   │   └── azure.pkrvars.hcl  # Azure vars.
│   └── os\                 # OS vars; one per OS/distribution.
│       ├── win11.pkrvars.hcl    # Win11 vars.
│       ├── winsvr2022.pkrvars.hcl  # WinServer vars.
│       ├── ubuntu.pkrvars.hcl      # Ubuntu vars.
│       └── rhel.pkrvars.hcl        # RHEL vars.
├── floppy\                  # Floppy files for vSphere: Git-tracked; small configs (e.g., autounattend.xml); common/ for shared.
│   ├── windows\            # Windows floppy: OS-specific subfolders.
│   │   ├── win11\          # Win11 floppy.
│   │   │   ├── vsphere\    # vSphere platform floppy (e.g., autounattend.xml).
│   │   │   └── azure\      # Azure platform floppy.
│   │   ├── winsvr2022\     # WinServer floppy.
│   │   │   ├── vsphere\
│   │   │   └── azure\
│   │   └── common\         # Shared Windows floppy (e.g., common drivers or configs).
│   ├── linux\              # Linux floppy: OS-specific subfolders.
│   │   ├── ubuntu\         # Ubuntu floppy.
│   │   │   ├── vsphere\    # vSphere (e.g., ks.cfg).
│   │   │   └── azure\      # Azure.
│   │   ├── rhel\           # RHEL floppy.
│   │   │   ├── vsphere\
│   │   │   └── azure\
│   │   └── common\         # Shared Linux floppy (e.g., common ks.cfg fragments).
│   └── macos\              # Future MacOS floppy.
│       ├── vsphere\
│       └── common\         # Shared MacOS floppy.
├── isos\                    # ISO references (gitignored): Placeholders for external ISOs (SMB pulls); common/ for shared.
│   ├── windows\            # Windows ISOs: OS-specific subfolders.
│   │   ├── win11\          # Win11 ISOs.
│   │   │   ├── vsphere\    # vSphere (e.g., README.txt with iso_url reference).
│   │   │   └── azure\      # Azure.
│   │   ├── winsvr2022\     # WinServer ISOs.
│   │   │   ├── vsphere\
│   │   │   └── azure\
│   │   └── common\         # Shared Windows ISOs (e.g., update ISOs).
│   ├── linux\              # Linux ISOs: OS-specific subfolders.
│   │   ├── ubuntu\         # Ubuntu ISOs.
│   │   │   ├── vsphere\
│   │   │   └── azure\
│   │   ├── rhel\           # RHEL ISOs.
│   │   │   ├── vsphere\
│   │   │   └── azure\
│   │   └── common\         # Shared Linux ISOs (e.g., tool ISOs).
│   └── macos\              # Future MacOS ISOs.
│       ├── vsphere\
│       └── common\         # Shared MacOS ISOs.
├── .gitignore               # Git ignore rules (e.g., builds/, bin/, .env).
├── .env.example             # Example secrets file.
├── README.md                # Project documentation.
├── Build-Template.ps1       # Windows build wrapper (PowerShell).
├── Build-Template.sh        # Linux build wrapper (shell).
└── tests\                   # Multi-OS testing: Subfolders for OS-specific tests.
    ├── windows\             # Pester tests for Windows (e.g., script-tests.ps1).
    └── linux\               # BATS tests for Linux (e.g., script-tests.bats).
